# =============================================================================
# スカイツリー撮影プランナー v0.1.0 - 環境変数設定
# =============================================================================
#
# このファイルを .env にコピーして環境に応じて値を変更してください
# cp .env.example .env
#
# セキュリティ注意事項:
# - JWT_SECRET, REFRESH_SECRET, DB_PASSWORD は本番環境では必ず変更
# - .env ファイルは Git に含めないでください
#
# =============================================================================

# 実行環境
NODE_ENV=development
PORT=8000

# =============================================================================
# データベース設定
# =============================================================================

# Docker 環境での PostgreSQL 接続 (推奨)
DATABASE_URL="postgresql://skytree_user:prod_password_change_me@postgres:5432/skytree_photo_planner?schema=public"

# ローカル開発時の PostgreSQL 接続
# DATABASE_URL="postgresql://username:password@localhost:5432/skytree_photo_planner?schema=public"

# 開発時クイックセットアップ用 SQLite (非推奨: 本格開発では PostgreSQL 使用)
# DATABASE_URL="file:./dev.db"

# PostgreSQL 個別設定 (Docker Compose で使用)
DB_NAME=skytree_photo_planner
DB_USER=skytree_user
DB_PASSWORD=prod_password_change_me

# =============================================================================
# Redis 設定 (キャッシュ・キューシステム)
# =============================================================================

# Docker 環境での Redis 接続 (推奨)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_URL=redis://redis:6379

# ローカル開発時の Redis 接続
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_URL=redis://localhost:6379

# =============================================================================
# JWT 認証設定
# =============================================================================

# JWT 署名キー ⚠️ 本番環境では必ず変更してください
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-256bit-secure-key-2025

# リフレッシュトークン署名キー ⚠️ 本番環境では必ず変更してください  
REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production-256bit-secure-key-2025

# トークン有効期限
TOKEN_EXPIRY=1h
REFRESH_EXPIRY=7d

# =============================================================================
# ログ設定
# =============================================================================

# ログレベル: debug, info, warn, error
LOG_LEVEL=info

# ファイルログ出力有効化 (本番環境推奨)
ENABLE_FILE_LOGGING=false

# ログファイル保存ディレクトリ
LOG_DIR=./logs

# =============================================================================
# バックグラウンドワーカー設定
# =============================================================================

# ワーカー並行処理数
WORKER_CONCURRENCY=3

# キュー最大ジョブ数
QUEUE_MAX_JOBS=100

# キュー並行処理数
QUEUE_CONCURRENCY=5

# =============================================================================
# 初期管理者アカウント設定
# =============================================================================

# 初期管理者ログイン情報 ⚠️ 本番環境では変更してください
ADMIN_USERNAME=admin
ADMIN_PASSWORD=admin123

# =============================================================================
# フロントエンド設定
# =============================================================================

# フロントエンド URL (本番環境で使用)
FRONTEND_URL=http://localhost

# CORS 許可オリジン (本番環境で設定)
# CORS_ORIGIN=https://yourdomain.com

# =============================================================================
# 外部 API 設定 (オプション)
# =============================================================================

# 天気情報 API キー (将来の機能拡張用)
# WEATHER_API_KEY=your-weather-api-key-here

# ジオコーディング API キー (将来の機能拡張用)
# GEOCODING_API_KEY=your-geocoding-api-key-here

# =============================================================================
# パフォーマンス調整 (上級者向け)
# =============================================================================

# データベースコネクションプール
DB_POOL_MIN=2
DB_POOL_MAX=10

# Redis コネクション設定
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=50

# レート制限設定
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_ADMIN_MAX_REQUESTS=60
RATE_LIMIT_AUTH_MAX_REQUESTS=5
RATE_LIMIT_AUTH_WINDOW_MS=900000