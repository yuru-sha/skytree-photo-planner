services:
  # PostgreSQL (開発用)
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=skytree_photo_planner
      - POSTGRES_USER=skytree_user
      - POSTGRES_PASSWORD=dev_password_123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
      - TZ=Asia/Tokyo
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U skytree_user -d skytree_photo_planner"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - skytree_photo_planner_network

  # Redis (開発用)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - skytree_photo_planner_network

  # 開発サーバー (モノレポ構成・ PostgreSQL 対応)
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    restart: unless-stopped
    ports:
      - "3000:3000"  # バックエンド API
      - "3001:3001"  # フロントエンド開発サーバー
    environment:
      - NODE_ENV=development
      # PostgreSQL 接続設定（Prisma 対応）
      - DATABASE_URL=postgresql://skytree_user:dev_password_123@postgres:5432/skytree_photo_planner
      # Redis 設定
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # JWT 設定
      - JWT_SECRET=dev-jwt-secret-not-for-production-256bit-secure-key-development
      - REFRESH_SECRET=dev-refresh-secret-not-for-production-256bit-secure-key-development
      # ログ設定
      - LOG_LEVEL=debug
      - ENABLE_FILE_LOGGING=false
      - LOG_DIR=/app/logs
      # タイムゾーン
      - TZ=Asia/Tokyo
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/client/node_modules
      - /app/apps/server/node_modules
      - /app/packages/types/node_modules
      - /app/packages/utils/node_modules
      - /app/packages/ui/node_modules
      - /app/packages/shared/node_modules
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    working_dir: /app
    command: npm run dev
    networks:
      - skytree_photo_planner_network

networks:
  skytree_photo_planner_network:
    driver: bridge
